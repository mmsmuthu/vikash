#include<iostream>

using namespace std;

class Complex{
    
    private:
        int a; 
        int b;
        
    public:
        void setData(int x, int y){
            a=x;
            b=y;
        }
        void display(){
            cout<<"a  := "<<a <<" "<<"b := "<<b<<endl;
        }
        
        friend void fun(Complex);
};

void fun(Complex c){
    cout<<"a :="<<c.a <<" b := "<<c.b<<endl;
    cout<<"a + b :="<<c.a+c.b<<endl;
}

int main(){
    Complex c1,c2;
    c1.setData(12,23);
    c1.display();
    fun(c1);
}


2nd Example.

#include<iostream>

using namespace std;

class B;

class A{
    private:
        int a;
    
    public:
        void setData(int x) {a=x;}
        
        friend void sum(A,B);
};

class B{
    private:
        int b;
    
    public:
        void setData(int y){b=y;}
        
        friend void sum(A,B);
};

void sum(A a1, B b1){
    cout<<"Sum of two numbers := "<<a1.a+b1.b<<endl;
}

int main(){
    A a1;
    B b1;
    a1.setData(2);
    b1.setData(3);
    sum(a1,b1);
    return 0;
}



.................................................................................
Friend function Example
#include<iostream>

using namespace std;

class Complex{
    
    private:
        int a, b;
        
    public:
        void setData(int x, int y){a=x;b=y;}
        void showData(){
            cout<<"a := "<<a <<" "<<"b := "<<b<<endl;
        }
        
        friend istream& operator>>(istream&, Complex&);
        friend ostream& operator<<(ostream&, Complex);
        
};

istream& operator>>(istream &din, Complex in){
    cin>>in.a<<in.b<<endl;
    return(din);
    
}

ostream& operator<<(ostream &dout , Complex c){
    cout<<"a := " <<c.a <<" "<<"b :="<<c.b<<endl;
    return(dout);
}



void main(){
    Complex obj1;
    cout<<"Enter your number :"<<endl;
    cin>>obj1;
    cout<<"Entered your number :"<<endl;
    cout<<obj1;
    //obj1.showData();
}
