#include<tc\tc.h>
#include<tc\emh.h>
#include<iostream>
#include<tccore\tctype.h>
#include<tccore\aom_prop.h>
#include<tccore\aom.h>
#include<tccore\item.h>
#include<sa\user.h>
#include<tc\folder.h>
#include<tccore\grm.h>

using namespace std;

int ITK_user_main(int argc, char* args[]){

	int iStatus = ITK_ok;
	char* pcError;

	tag_t type_t         = NULLTAG;
	tag_t crInput_t      = NULLTAG;
	tag_t objeItem_t     = NULLTAG;
	tag_t user_t         = NULLTAG;
	tag_t homeFolder_t   = NULLTAG;
	tag_t folder_t       = NULLTAG;
	tag_t fInput_t       = NULLTAG;
	tag_t flObj_t        = NULLTAG;
	tag_t form_t         = NULLTAG;
	tag_t formInput_t    = NULLTAG;
	tag_t formObj_t      = NULLTAG;
	tag_t itemRev_t      = NULLTAG;
	tag_t relationType_t = NULLTAG;
	tag_t grmRelation_t  = NULLTAG;
	tag_t document_t     = NULLTAG;
	tag_t docInput_t     = NULLTAG;
	tag_t docObjet_t     = NULLTAG;
	tag_t relationTypeRef_t = NULLTAG;
	tag_t grmRelationRef_t = NULLTAG;

	// const char *object_name[] = { "TestItemName" };
	// const char *object_desc[] = { "TestItem Description" };
	

	char* pcUserName = ITK_ask_cli_argument("-u=");
	char* pcPassword = ITK_ask_cli_argument("-p=");
	char* pcGroup    = ITK_ask_cli_argument("-g=");

	//Login the TC
	iStatus = ITK_init_module(pcUserName,pcPassword,pcGroup);
	if(iStatus != ITK_ok){
		EMH_ask_error_text(iStatus, &pcError);
		cout<<"Login Error := "<<pcError<<endl;
		MEM_free(pcError);
	}else{
		cout<<"TC Successfully loged in"<<endl;
	}

	//..............................................................................................
	// Find User

	iStatus = SA_find_user2(pcUserName,&user_t);
	if(iStatus != ITK_ok){
		EMH_ask_error_text(iStatus, &pcError);
		cout<<"Error didn't find user id  "<<pcError<<endl;
		MEM_free(pcError);
	}else{
		AOM_ask_name(user_t, &pcUserName);
		cout<<"User id find successfully"<<pcUserName<<endl;
	}/*
	// Attached in home folder
	iStatus = SA_ask_user_home_folder(user_t, &homeFolder_t);

    //..............................................................................................
	//Create Folder
	iStatus = TCTYPE_find_type("Folder","Folder", &folder_t);
	iStatus = TCTYPE_construct_create_input(folder_t, &fInput_t);
	iStatus = AOM_set_value_string(fInput_t,"object_name","NewFolder5");
	iStatus = TCTYPE_create_object(fInput_t,&flObj_t);
	iStatus = FL_insert(homeFolder_t,flObj_t,999);
	iStatus = AOM_refresh(flObj_t,0);
	AOM_save(flObj_t);
	iStatus = AOM_save(homeFolder_t);
	

    //................................................................................................
	//Create Item
	iStatus = TCTYPE_find_type("Item","NULLTAG", &type_t);

	if(iStatus != ITK_ok){
		EMH_ask_error_text(iStatus, &pcError);
		cout<<"Error during find type "<<pcError<<endl;
		MEM_free(pcError);
	}else{
		cout<<"Type find successfully "<<endl;
	}

	iStatus = TCTYPE_construct_create_input(type_t, &crInput_t);

	iStatus = AOM_set_value_string(crInput_t,"object_name","TCItem19");
	//TCTYPE_set_create_display_value(crInput_t, "object_name", 1, object_name);
	//TCTYPE_set_create_display_value(crInput_t, "object_desc", 1, object_desc);

	iStatus = TCTYPE_create_object(crInput_t, &objeItem_t);
	iStatus = FL_insert(flObj_t,objeItem_t,000);
	//iStatus = AOM_save(flObj_t);
	iStatus = AOM_refresh(objeItem_t,0);
	iStatus = ITEM_save_item(objeItem_t);
	iStatus = AOM_save(flObj_t);
	
	cout<<"Saved successfully"<<endl;
	//............................................................................................
	//Create the form & attached under the itemRevision

	iStatus = TCTYPE_find_type("Form","Form",&form_t);
	iStatus = TCTYPE_construct_create_input(form_t, &formInput_t);
	iStatus = AOM_set_value_string(formInput_t,"object_name","FormOne");
	iStatus = TCTYPE_create_object(formInput_t, &formObj_t);
	iStatus = AOM_save(formObj_t);

	//iStatus = FL_insert(homeFolder_t,formObj_t,999);
	//iStatus = AOM_save(homeFolder_t);

	//..............................................................................................
	//Find the relation

	iStatus = GRM_find_relation_type("IMAN_specification", &relationType_t);
	GRM_save_relation(relationType_t);

	//..............................................................................................
	iStatus = GRM_find_relation_type("IMAN_reference", &relationTypeRef_t);
	GRM_save_relation(relationTypeRef_t);

	//...............................................................................................
	// Create the GRM Relation
	iStatus = ITEM_find_revision(objeItem_t,"A",&itemRev_t);
	iStatus = GRM_create_relation(itemRev_t,formObj_t,relationType_t,NULLTAG,&grmRelation_t);
	iStatus = GRM_save_relation(grmRelation_t);

	//..............................................................................................
	// Create Document

	iStatus = TCTYPE_find_type("Document","Document",&document_t);
	iStatus = TCTYPE_construct_create_input(document_t, &docInput_t);
	iStatus = AOM_set_value_string(docInput_t,"object_name","DocFirst");
	iStatus = TCTYPE_create_object(docInput_t, &docObjet_t);
	iStatus = AOM_save(docObjet_t);

	iStatus = GRM_create_relation(itemRev_t,docObjet_t,relationTypeRef_t,NULLTAG,&grmRelationRef_t);
	//iStatus = AOM_save(docObjet_t);
	iStatus = GRM_save_relation(grmRelationRef_t); */

	//................................................................................................
	//BOM Structure creating.

	
	return iStatus;

}
